//plugins {
//    id 'org.jetbrains.kotlin.js' version '1.3.41'
//}

buildscript {
    ext.kotlin_version = '1.3.41'

    repositories {
        jcenter()
        mavenCentral()
        maven {
            url "https://dl.bintray.com/kotlin/kotlin-eap"
        }
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-frontend-plugin:0.0.45"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}


// apply plugin
//apply plugin: 'kotlin-platform-js'
//apply plugin: 'org.jetbrains.kotlin.frontend'

// apply kotlin2js
apply plugin: 'kotlin2js'

group 'fr.magistry'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-js"
    testImplementation "org.jetbrains.kotlin:kotlin-test-js"

    def kotlinx_html_version = "0.6.11"

    // include for server side
  //  compile "org.jetbrains.kotlinx:kotlinx-html-jvm:${kotlinx_html_version}"

    // include for client-side
    compile "org.jetbrains.kotlinx:kotlinx-html-js:${kotlinx_html_version}"

    //semantic-ui webjar
    compile 'org.webjars:Semantic-UI:2.4.1'
    compile 'org.webjars:jquery:3.4.1'
}

//kotlin.target.browser { }


compileKotlin2Js {
//    destinationDir = "${projectDir}/web"
    kotlinOptions.outputFile = "${projectDir}/web/main/main.js"
    //kotlinOptions.moduleKind = "umd"
    kotlinOptions.sourceMap = true
}

task assembleWeb(type: Sync) {
    configurations.compile.each { File file ->
        from(zipTree(file.absolutePath), {
            includeEmptyDirs = false
            include { fileTreeElement ->
                def path = fileTreeElement.path
                path.endsWith(".js") && (path.startsWith("META-INF/resources/") ||
                        !path.startsWith("META-INF/"))
            }
        })
    }
    from compileKotlin2Js.destinationDir
    into "${projectDir}/web/kotlin"

    dependsOn classes
}

assemble.dependsOn assembleWeb


task all {
    dependsOn assembleWeb
    dependsOn compileKotlin2Js
}